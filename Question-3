import time
import numpy as nump
import matplotlib.pyplot as p

def f(n):
    x = 1
    for i in range(1, n + 1):
        for j in range(1, n + 1):
            x += 1
    return x

n1 = nump.arange(1, 150)
time1 = nump.zeros_like(n1, dtype=float)

for i, n in enumerate(n1):
    starting_time = time.time()
    f(n)
    time1[i] = time.time() - starting_time

# Fit a polynomial curve to the data
p.plot(n1, time1, 'r', label='Time taken to execute')
p.plot(n1, curve_fit, 'r-', linewidth=2, label='Polynomial Curve')
coefficients = nump.polyfit(n1, time1, 2)
curve_fit = nump.polyval(coefficients, n1)

#upper bound and lower bound
upper_bound = 1.0 * nump.polyval(coefficients, n1)
lower_bound = 0.5 * nump.polyval(coefficients, n1)

# Print expressions

print("Upper Bound (Big-O):", upper_bound_expression)
print("Lower Bound (Big-Omega):", lower_bound_expression)

# Plotting
p.figure()

p.plot(n1, upper_bound_curve, 'm', linewidth=1, label='Upper Bound')
p.plot(n1, lower_bound_curve, 'o', linewidth=2, label='Lower Bound')
p.xlabel('Value')
p.ylabel('Time(T)')
p.title('Plot For Upper and Lower Bounds')
p.grid(True)
p.legend()
p.show()


